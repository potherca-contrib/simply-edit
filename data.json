{
	"/simply-edit/": {
		"meta title": "Simply edit the web - by ylebre",
		"meta description": {
			"content": "Simply-edit demo site!!"
		},
		"project-name": "Simply&nbsp;edit the web!",
		"project-tagline": "Use the key 'demo' to try out Simply edit.",
		"link": {
			"innerHTML": "Edit me!",
			"href": "#simply-edit",
			"class": "btn"
		},
		"main-content": "<h3>\n<a id=\"welcome-to-github-pages\" class=\"anchor\" href=\"#welcome-to-github-pages\" aria-hidden=\"true\"></a><span class=\"octicon octicon-link\"></span>Simply edit&nbsp;GitHub Pages</h3>\n\n<p>This page was automatically generated using GitHub Pages and modified to add support for Simply edit. This editor uses the markup provided in the HTML to merge the page with the data, clientside. In this example, the page data is also&nbsp;stored in GitHub.</p>\n\n\n<h3>Not just Markdown</h3>\n\n<p>While Markdown is fine for most uses, this editor allows you to fully leverage the power of HTML. By using &lt;template&gt; instructions within the HTML, the&nbsp;editor can insert any HTML structure you want. Modifications on the page are quick and simple, leaving you in control. Take a peek at the <a href=\"integration.html\">quick integration guide</a> for more information, or check out the <a href=\"/sublime/\">Sublime template</a>&nbsp;or the <a href=\"http://ylebre.github.io/spectral/\">Spectral template</a>.</p>\n\n\n<h3>Plays well with others</h3>\n\n<p>This editor was designed with an expanding web in mind. The toolbars in the pages are context-aware and are easily added to the editor to add specific options for specific HTML structures. The basic version supports the&nbsp;most&nbsp;commonly used HTML elements (text, images, hyperlinks), but more toolbars are available. Each editor context&nbsp;uses CSS-like selectors to decide which toolbar is best suited.&nbsp;Read more about <a href=\"adding-toolbars.html\">adding toolbars</a>. </p>\n\n\n<h3>CMS&nbsp;Integrations</h3>\n\n<p>We are looking for developers that want to help us integrate Simply edit into various platforms. We have integrated the editor in <a href=\"http://www.ariadne-cms.org/\">Ariadne</a>,&nbsp;our own&nbsp;web application platform, but the world of the web is a much larger place. Since the editor is now totally decoupled from Ariadne, we want to share it with as many users as possible. Read more about <a href=\"cms-integration.html\">CMS integration</a>.</p>\n\n\n<h3>\n<a id=\"support-or-contact\" class=\"anchor\" href=\"#support-or-contact\" aria-hidden=\"true\"></a><span class=\"octicon octicon-link\"></span>Support or Contact</h3>\n\n<p>Having trouble with the editor?&nbsp;Have an idea for a 'must have'&nbsp;plugin? Drop me a line here on GitHub. </p>\n\n\n &nbsp; &nbsp; &nbsp;\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"site-footer-owner\"><a href=\"https://github.com/ylebre/simply-edit\">Simply-edit</a> is maintained by <a href=\"https://github.com/ylebre\">ylebre</a>.</span>\n\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"site-footer-credits\">This page was generated by <a href=\"https://pages.github.com\">GitHub Pages</a> using the <a href=\"https://github.com/jasonlong/cayman-theme\">Cayman theme</a> by <a href=\"https://twitter.com/jasonlong\">Jason Long</a>.</span>\n &nbsp; &nbsp; &nbsp;",
		"menu": []
	},
	"/simply-edit/integration.html": {
		"meta title": "Quick integration guide",
		"meta description": {
			"content": "Quick integration guide for Simply edit"
		},
		"project-name": "Quick integration guide",
		"project-tagline": "How to deploy Simply edit on your site",
		"link": {
			"innerHTML": "Edit me!",
			"href": "#simply-edit",
			"class": "btn"
		},
		"main-content": "<h3>How to deploy the editor on your site</h3>\n\n<p>Here is a quick integration guide to add Simply edit to your own website. You will need some experience with HTML for this, although we tried really hard to make this as simple as possible.</p>\n<p>Lets say you have a heading in your page. The HTML will look something like this:</p>\n<p><code>&lt;h1&gt;This is my title&lt;/h1&gt;</code></p>\n<p>We need to give the editor a hint that this should be editable, and what the contents are, like so:&nbsp;</p>\n<p><code>&lt;h1 data-simply-field=\"title\"&gt;This is my title&lt;/h1&gt;</code></p>\n<p>Repeat this for all the elements you want to make editable.</p>\n<p>Include the editor javascript just before the &lt;/body&gt; tag:</p>\n<p><code>&lt;script src=\"http://se-cdn.muze.nl/simply-edit.js\" data-api-key=\"github\"&gt;&lt;/script&gt;</code></p>\n<p>Repeating elements and templates</p>\n<p>In most HTML templates you will encounter repeating elements, for instance a menu or a list of blog posts. There elements all share the same HTML structure. For example:</p>\n<p><code>&lt;ul class=\"posts\"&gt;<br>&nbsp;&nbsp;&lt;li class=\"post\"&gt;<br>&nbsp; &nbsp;&nbsp;&lt;h3&gt;The title of the post&lt;/h3&gt;<br>&nbsp; &nbsp;&nbsp;&lt;p&gt;This is the description&lt;/p&gt;<br>&nbsp;&nbsp;&lt;/li&gt;<br>&lt;/ul&gt;<br></code></p><p>We want to tell the editor that we have a lists of posts, and that each post within the list should have the same HTML structure. Each list item has an editable&nbsp;title and description:</p><p><code>&lt;ul class=\"posts\" data-simply-list=\"posts\"&gt;<br>&nbsp;&nbsp;&lt;template data-simply-template=\"Post\"&gt;<br>&nbsp; &nbsp;&nbsp;&lt;li class=\"post\"&gt;<br>&nbsp; &nbsp; &nbsp;&nbsp;&lt;h3 data-simply-field=\"title\"&gt;The title of the post&lt;/h3&gt;<br>&nbsp; &nbsp; &nbsp;&nbsp;&lt;p data-simply-field=\"description\"&gt;This is the description&lt;/p&gt;<br>&nbsp; &nbsp;&nbsp;&lt;/li&gt;<br>&nbsp;&nbsp;&lt;/template&gt;<br>&lt;/ul&gt;</code></p><p>Simply edit vocabulary</p><p>\n\n</p><p><code>data-simply-field=name</code></p><p> This is editable.</p><p><code>data-simply-path=/simply-edit/</code></p><p> Store the data within a specific path. This allows you to have fields that have the same contents across pages.&nbsp;</p><p><code>data-simply-type=text</code></p><p> Applies to fields. This field contains plain text (no HTML).&nbsp;</p><p><code>data-simply-list=name</code></p><p> This is a list, data for the list entries will be stored as 'name'&nbsp;</p><p><code>data-simply-template=name</code></p><p> Applies on &lt;template&gt; tags, used to provide a list with an&nbsp;HTML template for list entries</p><p><code>data-simply-sortable</code></p><p> Applies to lists, makes it sortable</p><p><code>data-simply-selectable</code></p><p> Tells the editor that this element is selectable as a unit\n</p><p><code>data-simply-list-item</code></p><p>Tells the editor that this element is an entry in a list</p><p><code>data-simply-hidden</code></p><p>Tells the editor that this element should be hidden with display:none when in editmode. Use to remove pesky hovering elements that go over editable text.</p>"
	},
	"/simply-edit/adding-toolbars.html": {
		"meta title": "Simply-edit demosite by ylebre",
		"meta description": {
			"content": "Simply-edit demo site"
		},
		"project-name": "Extending the editor",
		"project-tagline": "How to add custom toolbars to the editor ",
		"link": {
			"innerHTML": "Edit me!",
			"href": "#simply-edit",
			"class": "btn"
		},
		"main-content": " <h1>Extending Simply edit</h1>\n<p>\nWith the speed the web is evolving, it is neigh impossible to keep up with the development pace. With this in mind Simply edit was designed so that its parts are easily replaced and new functions are easily added.\n\nSimply edit decides what toolbar to show based on a context - this is basicly what the user has selected on the screen. The editor finds out what context it is in using context filters, which are usually configured along with the rest of a toolbar.\n</p>\n\n<p>\nContext filters are a lot like CSS selectors, except they are bottom up. The deeper the context is found, the more weight it carries.\n</p>\n\n<h3>\nHere is an example of a context filter:\n<br>\n\n\n<code>editor.addContextFilter(<br>\n\n &nbsp; \"simply-hyperlink\", {<br>\n\n\t &nbsp; &nbsp; &nbsp;\"selector\" : \"A\",<br>\n\n\t &nbsp; &nbsp; &nbsp;\"parent\" : {\n\t\t\t\"selector\" : \"*\"\n\t},<br>\n\n\n\t &nbsp; &nbsp; &nbsp;\"context\" : \"simply-text-selection<br>\n\n\n\n});\n\n</code></h3>\n<p>\nThis filter applies for any hyperlink (A tag), with any parent selector. So when a user clicks on any hyperlink in the page, the context 'simply-text-selection' is selected and that toolbar is shown.\n\nHere is a full example of a toolbar, including the javascript to add it to the editor.\n</p>\n<p><code>\n&lt;section id=\"simply-text-cursor\" class=\"simply-section\"&gt;\n<br>\n\n\t &nbsp; &nbsp;&lt;div class=\"simply-toolbar\"&gt;\n<br>\n\n\t\t &nbsp; &nbsp; &nbsp; &lt;ul class=\"simply-buttons\"&gt;\n<br>\n\n\t\t\t &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;li&gt;&lt;button data-simply-section=\"simply-text-style\" class=\"simply-expands\"&gt;<br>\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;i class=\"fa fa-magic\"&gt;&lt;/i&gt;Style&lt;/button&gt;&lt;/li&gt;\n<br>\n\n\t\t\t &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;li&gt;&lt;button data-simply-section=\"simply-text-align\" class=\"simply-expands\"&gt;<br>\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;i class=\"fa fa-align-left\"&gt;&lt;/i&gt;Align&lt;/button&gt;&lt;/li&gt;<br>\n\n\n\t\t &nbsp; &nbsp; &nbsp; &lt;/ul&gt;<br>\n\n\n\t\t &nbsp; &nbsp; &nbsp; &lt;div class=\"simply-toolbar-section simply-text-style\"&gt;<br>\n\n\n\t\t\t &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;ul&gt;\n<br>\n\n\t\t\t\t &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;li class=\"simply-text-bold\"&gt;&lt;button data-simply-action=\"simply-text-bold\"&gt;<br>\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;i class=\"fa fa-bold\"&gt;&lt;/i&gt;Bold&lt;/button&gt;&lt;/li&gt;\n<br>\n\n\t\t\t &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/ul&gt;\n<br>\n\n\n\t\t &nbsp; &nbsp; &nbsp; &lt;/div&gt;\n<br>\n\n\n\t &nbsp; &nbsp;&lt;/div&gt;\n<br>\n\n\n&lt;/section&gt;\n\n</code>\n </p>\n\n<p>\n\n<code>editor.addToolbar({<br>\n\n\n\t &nbsp; &nbsp;\"name\" : \"simply-text-cursor\",<br>\n\n\n\t &nbsp; &nbsp; \"filter\" : {\n\t\t\t\"sel-collapsed\" : true\n\t},\n<br>\n\n\t &nbsp; &nbsp; update : updateTextToolbar,\n<br>\n\n\t &nbsp; &nbsp; init : function(toolbar) {\n\t}<br>\n\n\n});\n\n</code>\n</p>\n<h3>\n\nHere is a breakdown of what is happening:\n<br>\n\n\n<br>\n<code>&lt;section id=\"simply-text-cursor\" class=\"simply-section\"&gt;\n</code></h3>\n<p>\nThe name of this toolbar is 'simply-text-cursor';\n</p>\n\n<p>\n<code>&lt;div class=\"simply-toolbar\"&gt;\n</code><br>\nWhere the toolbar buttons go\n<br>\n\t\n<br>\n<code>&lt;ul class=\"simply-buttons\"&gt;\n</code><br>\nDisplay a horizontal list of buttons\n</p>\n\n<p>\n<code>&lt;li&gt;&lt;button data-simply-section=\"simply-text-style\" class=\"simply-expands\"&gt;<br>\n &nbsp; &nbsp; &nbsp;&lt;i class=\"fa fa-magic\"&gt;&lt;/i&gt;Style&lt;/button&gt;&lt;/li&gt;</code>\n</p>\n<p>\nShow a button with a magic wand icon, with the text 'style'. This button gets the class 'simply expand' (which adds a little arrow on the bottom of the button). The attribute 'data-simply-section' points to which toolbar section is shown when this button is expanded.\n<br>\n\t\t\t\n<br>\n<code>&lt;div class=\"simply-toolbar-section simply-text-style\"&gt;\n</code><br>\nAdd a toolbar section (which expands when the corresponding button is activated); This section gets the class 'simply-text-style', corresponding to the data-simply-section on the button that expands it.\n\t\t\n</p>\n<p>\n<code>&lt;ul&gt;\n</code><br>\nDisplay a list of buttons\n\n</p>\n<p>\n<code>&lt;li class=\"simply-text-bold\"&gt;&lt;button data-simply-action=\"simply-text-bold\"&gt;<br>\n &nbsp; &nbsp; &lt;i class=\"fa fa-bold\"&gt;&lt;/i&gt;Bold&lt;/button&gt;&lt;/li&gt;\n</code><br>\nShow a button with a 'bold' icon and the text 'style'. When the button is clicked, invoke the editor action 'simply-text-bold';\n<br>\n\t\t\t\t\n<br>\n<code>editor.addToolbar({\n</code><br>\n\t// Add a toolbar for the context 'simply-text-cursor' (required)\n<br>\n\t <code>&nbsp; &nbsp;\"name\" : \"simply-text-cursor\",\n</code><br>\n\t\t\n\t// Show this toolbar when the selection is collapsed; (required)\n<br>\n\t <code>&nbsp; &nbsp;\"filter\" : {\n\t\t\t\"sel-collapsed\" : true\n\t},</code>\n<br>\n\t\t\n\t// Each time the toolbar is shown, run this function. Add code to update button states and such here. (optional)\n<br>\n\t <code>&nbsp; &nbsp;update : function(toolbar) {\n\t},\n</code><br>\n\n\t// When the toolbar is first loaded, run this code to initialize everyhing. (optional)\n<br>\n\t <code>&nbsp; &nbsp;init : function(toolbar) {\n\t},\n</code><br>\n\t\t\n\t// Add these actions to the editor. Note that these actions are globally available, so you can override specific actions in the editor this way. (optional)\n<br>\n\t <code>&nbsp; &nbsp;actions : {\n\t\t'simply-text-bold' : function(button) { }\n</code><br>\n\t\t\t// Run the code to make the current selection bold;\n<br>\n\t\t\t\t\t\n<code>});</code>\n&nbsp; &nbsp; &nbsp;\n &nbsp; &nbsp; &nbsp; &nbsp;</p><span class=\"site-footer-owner\"><a href=\"https://github.com/ylebre/simply-edit\">Simply-edit</a> is maintained by <a href=\"https://github.com/ylebre\">ylebre</a>.</span>\n\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"site-footer-credits\">This <a href=\"nonexistant.html\">page </a>was generated by <a href=\"https://pages.github.com\">GitHub Pages</a> using the <a href=\"https://github.com/jasonlong/cayman-theme\">Cayman theme</a> by <a href=\"https://twitter.com/jasonlong\">Jason Long</a>.</span>\n &nbsp; &nbsp; &nbsp;\n\n &nbsp; &nbsp;"
	},
	"/simply-edit/page-template.html": {
		"meta title": "Simply-edit demosite by ylebre",
		"meta description": {
			"content": "Simply-edit demo site"
		},
		"project-name": "Simply-edit",
		"project-tagline": "Testsite for editor",
		"link": {
			"innerHTML": "Edit me!",
			"href": "#simply-edit",
			"class": "btn"
		},
		"main-content": "\n &nbsp; &nbsp;\t<h3>Template page!</h3><div>And a <a href=\"testing.html\">link</a>!</div>\n &nbsp; &nbsp; &nbsp;\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"site-footer-owner\"><a href=\"testing.html\">Simply-edit</a> is maintained by <a href=\"https://github.com/ylebre\">ylebre</a>.</span>\n\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"site-footer-credits\">This page was generated by <a href=\"https://pages.github.com\">GitHub Pages</a> using the <a href=\"https://github.com/jasonlong/cayman-theme\">Cayman theme</a> by <a href=\"https://twitter.com/jasonlong\">Jason Long</a>.</span>\n &nbsp; &nbsp; &nbsp;\n\n &nbsp; &nbsp;"
	},
	"/simply-edit/testing.html": {
		"meta title": "Simply-edit demosite by ylebre",
		"meta description": {
			"content": "Simply-edit demo site"
		},
		"project-name": "Simply-edit",
		"project-tagline": "Testsite for editor",
		"link": {
			"innerHTML": "Edit me!",
			"href": "#simply-edit",
			"class": "btn"
		},
		"main-content": "\n &nbsp; &nbsp;\t<h3>Template page!</h3>\n &nbsp; &nbsp; &nbsp;\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"site-footer-owner\"><a href=\"https://github.com/ylebre/simply-edit\">Simply-edit</a> is maintained by <a href=\"https://github.com/ylebre\">ylebre</a>.</span>\n\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"site-footer-credits\">This page was generated by <a href=\"https://pages.github.com\">GitHub Pages</a> using the <a href=\"https://github.com/jasonlong/cayman-theme\">Cayman theme</a> by <a href=\"https://twitter.com/jasonlong\">Jason Long</a>.</span>\n &nbsp; &nbsp; &nbsp;\n\n &nbsp; &nbsp;"
	},
	"/simply-edit/cms-integrations.html": {
		"meta title": "Simply edit the web - by ylebre",
		"meta description": {
			"content": "Simply-edit demo site!!"
		},
		"project-name": "Simply-edit",
		"project-tagline": "Testsite for editor",
		"link": {
			"innerHTML": "Edit me!",
			"href": "#simply-edit",
			"class": "btn"
		},
		"main-content": "\n &nbsp; &nbsp; &nbsp;<h3>\n<a id=\"welcome-to-github-pages\" class=\"anchor\" href=\"#welcome-to-github-pages\" aria-hidden=\"true\"></a><span class=\"octicon octicon-link\"></span>Welcome to GitHub Pages.</h3>\n\n<p>This automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here <a href=\"https://guides.github.com/features/mastering-markdown/\">using GitHub Flavored Markdown</a>, select a template crafted by a designer, and publish. After your page is generated, you can check out the new <code>gh-pages</code> branch locally. If you\u2019re using GitHub Desktop, simply sync your repository and you\u2019ll see the new branch.</p>\n\n<h3>\n<a id=\"designer-templates\" class=\"anchor\" href=\"#designer-templates\" aria-hidden=\"true\"></a><span class=\"octicon octicon-link\"></span>Designer Templates</h3>\n\n<p>We\u2019ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.</p>\n\n<h3>\n<a id=\"creating-pages-manually\" class=\"anchor\" href=\"#creating-pages-manually\" aria-hidden=\"true\"></a><span class=\"octicon octicon-link\"></span>Creating pages manually</h3>\n\n<p>If you prefer to not use the automatic generator, push a branch named <code>gh-pages</code> to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.</p>\n\n<h3>\n<a id=\"authors-and-contributors\" class=\"anchor\" href=\"#authors-and-contributors\" aria-hidden=\"true\"></a><span class=\"octicon octicon-link\"></span>Authors and Contributors</h3>\n\n<p>You can <a href=\"https://github.com/blog/821\" class=\"user-mention\">@mention</a> a GitHub username to generate a link to their profile. The resulting <code>&lt;a&gt;</code> element will link to the contributor\u2019s GitHub Profile. For example: In 2007, Chris Wanstrath (<a href=\"https://github.com/defunkt\" class=\"user-mention\">@defunkt</a>), PJ Hyett (<a href=\"https://github.com/pjhyett\" class=\"user-mention\">@pjhyett</a>), and Tom Preston-Werner (<a href=\"https://github.com/mojombo\" class=\"user-mention\">@mojombo</a>) founded GitHub.</p>\n\n<h3>\n<a id=\"support-or-contact\" class=\"anchor\" href=\"#support-or-contact\" aria-hidden=\"true\"></a><span class=\"octicon octicon-link\"></span>Support or Contact</h3>\n\n<p>Having trouble with Pages? Check out our <a href=\"https://help.github.com/pages\">documentation</a> or <a href=\"https://github.com/contact\">contact support</a> and we\u2019ll help you sort it out.</p>\n\n &nbsp; &nbsp; &nbsp;\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"site-footer-owner\"><a href=\"https://github.com/ylebre/simply-edit\">Simply-edit</a> is maintained by <a href=\"https://github.com/ylebre\">ylebre</a>.</span>\n\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"site-footer-credits\">This page was generated by <a href=\"https://pages.github.com\">GitHub Pages</a> using the <a href=\"https://github.com/jasonlong/cayman-theme\">Cayman theme</a> by <a href=\"https://twitter.com/jasonlong\">Jason Long</a>.</span>\n &nbsp; &nbsp; &nbsp;\n\n &nbsp; &nbsp;"
	},
	"/simply-edit/cms-integration.html": {
		"meta title": "Simply-edit demosite by ylebre",
		"meta description": {
			"content": "Simply-edit demo site"
		},
		"project-name": "CMS integration",
		"project-tagline": "Adding a custom storage layer to Simply Edit",
		"link": {
			"innerHTML": "Edit me!",
			"href": "#simply-edit",
			"class": "btn"
		},
		"main-content": "<h3>Adding a custom storage layer</h3><div>Simply Edit allows you to add your own storage layer. This layer is responsible for storing and retrieving the JSON data blob, as well as listing files and images for the browse dialogs.\n</div><p>To add a custom storage layer, create a storage object before loading simply-edit.js. Pass the variable name of the object to Simply Edit with the attribute <code>data-simply-storage</code>:</p><div><code>&lt;script src=\"http://se-cdn.muze.nl/simply-edit.js\" <br>data-api-key=\"github\" <br>data-simply-storage=\"mycustomStorage\"&gt;</code></div><p>Here is a skeleton for the storage layer so you can roll your own:<br></p>\n<p><code>var myCustomStorage = {<br>&nbsp;init : function(endpoint) {\n<br>&nbsp; /**\n<br>&nbsp; &nbsp;Initialization for the storage layer\n<br>&nbsp; &nbsp;endpoint: (string) URL location for the backend endpoint.\n<br>&nbsp; */\n<br>&nbsp;\n<br>&nbsp; /* Do things to initialize your storage layer. */\n<br>&nbsp;\n<br>&nbsp; /*Save the endpoint for later use. */\n<br>&nbsp; this.endpoint = endpoint;\n<br>&nbsp;},\n<br>&nbsp;save : function(data, callback) {\n<br>&nbsp; /**\n<br>&nbsp; &nbsp;Saves data in the backend\n<br>&nbsp; &nbsp;data: (string) contains the new JSON blob with site data.\n<br>&nbsp; &nbsp;callback: (function) the function to call after the save is done.\n<br>&nbsp; */\n<br>&nbsp;},\n<br>&nbsp;load : function(callback) {\n<br>&nbsp; /**\n<br>&nbsp; &nbsp;Load data from the backend.\n<br>&nbsp; &nbsp;callback: (function) the function to call after the data is loaded. The JSON blob with site data will be passed as its only argument.\n<br>&nbsp; */\n<br>&nbsp;},\n<br>&nbsp;connect : function() {\n<br>&nbsp; /**\n<br>&nbsp; &nbsp;This function is called before editmode is started and before a save operation is called.\n<br>&nbsp; &nbsp;Add checks to validate the credentials here.\n<br>&nbsp; */\n<br>&nbsp;},\n<br>&nbsp;disconnect : function() {\n<br>&nbsp; /**\n<br>&nbsp; &nbsp;Disconnect from the backend storage, remove credentials.\n<br>&nbsp; */\n<br>&nbsp;},\n<br>&nbsp;list : function(url, callback) {\n<br>&nbsp; /**\n<br>&nbsp; &nbsp;List files, folders and images for the given endpoint URL;\n<br>&nbsp; &nbsp;\n<br>&nbsp; &nbsp;This function is called with 'endpoint/data.json' to populate the sitemap dialog.\n<br>&nbsp; &nbsp;I suggest adding special handling for JSON blob file to return the contents of the blob.\n<br>&nbsp; &nbsp;\n<br>&nbsp; &nbsp;This function is used by the sitemap, image browse and file browse dialogs.\n<br>&nbsp; &nbsp;\n<br>&nbsp; &nbsp;url: (string) url to list the images from.\n<br>&nbsp; &nbsp;callback: (function) callback function to call with the list.\n<br>&nbsp; &nbsp;\n<br>&nbsp; &nbsp;Example list:\n<br>&nbsp; &nbsp;{\n<br>&nbsp; &nbsp; folders : [\n<br>&nbsp; &nbsp; &nbsp;{\n<br>&nbsp; &nbsp; &nbsp; url : \"http://endpoint.com/folder1/\",\n<br>&nbsp; &nbsp; &nbsp; name : \"Folder 1\"\n<br>&nbsp; &nbsp; &nbsp;},\n<br>&nbsp; &nbsp; &nbsp;{\n<br>&nbsp; &nbsp; &nbsp; url : \"http://endpoint.com/folder2/\",\n<br>&nbsp; &nbsp; &nbsp; name : \"Folder 1\"\n<br>&nbsp; &nbsp; &nbsp;}\n<br>&nbsp; &nbsp; ],\n<br>&nbsp; &nbsp; files : [\n<br>&nbsp; &nbsp; &nbsp;{url : \"http://endpoint.com/myfile.txt\"},\n<br>&nbsp; &nbsp; &nbsp;{url : \"http://endpoint.com/myfile2.txt\"},\n<br>&nbsp; &nbsp; &nbsp;{url : \"http://endpoint.com/myfile3.txt\"},\n<br>&nbsp; &nbsp; &nbsp;{url : \"http://endpoint.com/image1.png\"},\n<br>&nbsp; &nbsp; &nbsp;{url : \"http://endpoint.com/image2.png\"}\n<br>&nbsp; &nbsp; ],\n<br>&nbsp; &nbsp; images : [\n<br>&nbsp; &nbsp; &nbsp;{url : \"http://endpoint.com/image1.png\"},\n<br>&nbsp; &nbsp; &nbsp;{url : \"http://endpoint.com/image2.png\"}\n<br>&nbsp; &nbsp; ]\n<br>&nbsp; &nbsp;}\n<br>&nbsp; */\n<br>&nbsp;},\n<br>&nbsp;\n<br>&nbsp;/**\n<br>&nbsp; Optional functions, only add these if you need them.\n<br>&nbsp;*/\n<br>&nbsp;checkJail : function(url) {\n<br>&nbsp; /**\n<br>&nbsp; &nbsp;Check if the given URL is part of our site.\n<br>&nbsp; &nbsp;This function is used when navigating to a page that is not in our data blob (yet).\n<br>&nbsp; &nbsp;\n<br>&nbsp; &nbsp;Returns true if the url should be stored in the data blob.\n<br>&nbsp; &nbsp;Returns false otherwise.\n<br>&nbsp; */\n<br>&nbsp;},\n<br>&nbsp;saveTemplate : function(template, callback) {\n<br>&nbsp; /**\n<br>&nbsp; &nbsp;Copy a page template file to the current URL location, used for adding new pages.\n<br>&nbsp; &nbsp;template: (string) name of the chosen template file to copy;\n<br>&nbsp; &nbsp;callback (function) callback function to call after the copy has been made.\n<br>&nbsp; */\n<br>&nbsp;}\n<br>};<br></code></p><div><br></div>"
	}
}
